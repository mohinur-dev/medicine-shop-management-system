
package pms.product;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pms.util.db;


public class ViewProduct extends javax.swing.JPanel {

    DefaultTableModel dtm;
    PreparedStatement pst;
    ResultSet rs;
    public ViewProduct() {
        initComponents();
        dtm = new DefaultTableModel(new String[] {"Id", "DogesFrom", "BrandName" ,"Strength" ,"Generic" ,"Manufecturer" ,"productGroup" ,"OrderNo" ,"MPP" ,"MRP" ,"Mfg.Date" ,"Exp.Date" ,"Available Unit" ,"Added By"}, 0);
        productTable.setModel(dtm);
        productTable.setShowGrid(true);
        showProducctFromDB();
    }
    
    private void showProducctFromDB() {
        try {
            pst = db.get().prepareStatement("SELECT * FROM product");
            rs = pst.executeQuery();
            dtm.setNumRows(0);
            while (rs.next()) {
                Object[] information = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11), rs.getString(12), rs.getString(13),  rs.getString(14)};
                dtm.addRow(information);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Can't get information from  database");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        txfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setText("View Prodduct");

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(productTable);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        txfSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txfSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSearch.setText("Search Product");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(txfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(101, 246, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(356, 356, 356))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfSearch)
                .addGap(11, 11, 11)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
//                try {
//            pst = db.get().prepareStatement("SELECT p_id, full_name, p_mrp, p_stock FROM product WHERE full_name LIKE ? ");
//            pst.setString(1, "%" + txfSearchProduct.getText() + "%");
//            rs = pst.executeQuery();
//            dtmSearch.setRowCount(0);
//            boolean flag = true;
//            while (rs.next()) {
//                Object[] productInfo = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)};
//                dtmSearch.addRow(productInfo);
//                txfSearchProduct.setText("");
//                flag = false;
//            }
//            if (flag) {
//                JOptionPane.showMessageDialog(this, "Product not found");
//            }
//        } catch (SQLException e) {
//            System.out.println(e);
//        }
        
        try {
            pst = db.get().prepareStatement("SELECT * FROM product WHERE full_name LIKE ?");
            pst.setString(1, "%" + txfSearch.getText() + "%");
            rs = pst.executeQuery();
            dtm.setNumRows(0);
            boolean flag = true;
            while (rs.next()) {
                Object[] product = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11), rs.getString(12), rs.getString(13),  rs.getString(14)};
                dtm.addRow(product);
                txfSearch.setText("");
                flag = false;
            }
            if (flag) {
                JOptionPane.showMessageDialog(this, "Product not found");
            }
        } catch (Exception e) {
            System.out.println("exception in product search");
        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField txfSearch;
    // End of variables declaration//GEN-END:variables
}
